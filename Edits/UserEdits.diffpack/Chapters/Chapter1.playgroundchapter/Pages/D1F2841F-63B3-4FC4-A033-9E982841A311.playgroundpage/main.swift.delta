<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>/*
 It's time to get started! Hit the run icon on your screen to pull up MultiCalc!
 
 After running, you'll see the screen titled 'Draw'
 
 This is the Draw Calculator, where you can handwrite any expression and let the calculator evaluate it for you!
 
 The currently supported operations include any numeric expression with addition, subtraction, multiplication, division, and exponents
 
 These operators can be combined in any method with the calculator built to follow PEMDAS for any parseable entry!
 */

/*
 After you've had your fun with the drawable calculator, read along to proceed!
 
 Our next step is the Graph Calculator. To Access the Graph Calculator, just click the tab on the bottom that says 'Graph' and a coordinate plane should pop up.
 
 The Graph Calculator is built to allow any expression implicitly solving for y (ex: y = x^2), where you enter the expression (x^2). The Graph calculator supports the same operations as the Draw calculator, again in any combination.
 
 To set your graph, click the top label and enter any equation you please! Once you're ready, click the checkmark and see your graph.
 
 If you want to see specific points, just click on the area with your finger and the point view should show up!
 */

/*
 Once you feel that you're all finished using the calculators, feel free to proceed to the last page for a brief outro beofre ending this tour!
 */

import PlaygroundSupport
import UIKit
PlaygroundPage.current.setLiveView(MainTabController())
</string>
			<key>ModifiedRange</key>
			<string>{0, 1494}</string>
			<key>OriginalContent</key>
			<string>
</string>
			<key>OriginalRange</key>
			<string>{0, 1}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
